// sample picoMIPS program 2 
// n = 8 bits, Isize = 16 bits
// format: 3b opcode, 3b %d, 3b %s, 7b immediate or address
// 
// HEX /////////// BINARY  ///////////////////// ASSEMBLER /////////
B000    // 16'b101_100_000_000_0000	LOAD  %4, %4, %0;  %4 = %0, load reg 0 in reg 4
8080	// 16'b100_000_001_000_0000	BEQ %0, %1, -1; branch if %1=0
CD30	// 16'b110_011_010_011_0000	MUL %3, %2, 0.75; %3=%2*0.75
D960	// 16'b110_110_010_110_0000	MUL %6, %2, -0.5; %6=%2*-0.5
6080	// 16'b011_000_001_000_0000	BNE %0, %1, -1; branch if %1!=0
8080	// 16'b100_000_001_000_0000	BEQ %0, %1, -1; branch if %1=0
D520	// 16'b110_101_010_010_0000	MUL %5, %2, 0.5; %5=%2*0.5
4E80    // 16'b010_011_101_000_0000	ADD %3, %3, %5;  %3=%3+%5
D530	// 16'b110_101_010_011_0000	MUL %5, %2, 0.75; %5=%2*0.75
6080	// 16'b011_000_001_000_0000	BNE %0, %1, -1; branch if %1!=0
3194    // 16'b001_100_011_001_0100	ADDI %4, %3, 20;  %4=%3+20
5A80    // 16'b010_110_101_000_0000	ADD %6, %6, %5;  %6=%6+%5
8080	// 16'b100_000_001_000_0000	BEQ %0, %1, -1; branch if %1=0
336C    // 16'b001_100_110_110_1100	ADDI %4, %6, -20;  %4=%6-20
6080	// 16'b011_000_001_000_0000	BNE %0, %1, -1; branch if %1!=0
80F1	// 16'b100_000_001_111_0001	BEQ %0, %1, -15; branch if %1=0